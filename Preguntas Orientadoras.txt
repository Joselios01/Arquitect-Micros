Arquitectura de Microprocesadores
Carrera de Especialización en Sistemas Embebidos
Universidad de Buenos Aires
 
Preguntas orientadoras 
1. Describa brevemente los diferentes perfiles de familias de 
microprocesadores/microcontroladores de ARM. Explique alguna de sus diferencias
características. Cortex M

Cortex A -> orientado a RTOS, tipo Android
         -> para S.O de proposito general
         -> latencia en respuesta de eventos del S.O. = 10ms
         -> memoria cache.

Cortex R -> orientado a RTOS, tipo EROSKI (automoviles)
         -> latencia de 16 instrucciones para una interrupcion.
         -> latencia en respuesta de eventos del S.O. = 1ms
	   -> no tiene memoria cache.

Cortex M -> RTOS, baremetal
	   -> MicroProcesadores con memoria y algunos perifericos. perfil para sistemas embebidos, menor costo.
         -> latencia de 16 instrucciones para una interrupcion.
         -> latencia en respuesta de eventos del S.O. = 1ms

Tiempo real = garantia de latencia aceptable! 



1. Describa brevemente las diferencias entre las familias de procesadores Cortex M0, M3 y
M4. 

M0/M0+ -> micros simples, economicos y de bajo consumo. (32bits)
       -> incuye MPU (Memory Protection Unit)
	 -> Thumbs1 casi ninguno el Thumbs2
	 -> arquitectura Von Neumann
	 -> Cache imposible
M3     -> microntrolador 32 bits (perrifericos estandar)
	 -> instrucciones mejoradas para manejo de bits.
       -> incuye MPU (Memory Protection Unit)
	 -> Thumbs1 y Thumbs2
	 -> instrucciones saturadas solo algunos de la familia
	 -> arquitectura Harvard
	 -> Cache imposible


M4     -> Microntrolador con funcionalidades DSP de 32bits mayor set de instrucciones que M3
	 -> instrucciones mejoradas para manejo de bits.
       -> incuye MPU (Memory Protection Unit)
       -> incuye FPU (Floating-Point Unit)
	 -> Thumbs1 y Thumbs2
	 -> instrucciones saturadas
	 -> arquitectura Harvard
	 -> Cache puede ser posible

M7     -> Mejorada para DSP con mayor set de instrucciones quer M4
	 -> instrucciones mejoradas para manejo de bits.
       -> incuye MPU (Memory Protection Unit)
       -> incuye FPU (Floating-Point Unit)
	 -> Thumbs1 y Thumbs2
	 -> instrucciones saturadas
	 -> arquitectura Harvard
	 -> Cache Opcional


porque ASM?
* aritmetica saturada -> sobrepasa el tamaño del "BYTE"
                      -> SIMD (Single Instruction Multiple Data)

2. ¿Por qué se dice que el set de instrucciones Thumb permite mayor densidad de código?
Explique 


Arm es una arquitectura de 32 bits.

Thumbs 1 -> Algunas instrucciones no usaban los 32, solo 16 bits, y en arquitecturas de 32 desperdician memoria

Thumbs 2 -> Fusiona las instrucciones de 16 y 32, para optimizar el espacio en memoria. solo M3, M4 y M7



3. ¿Qué entiende por arquitectura load-store? ¿Qué tipo de instrucciones no posee este
tipo de arquitectura? 


la arquitectura Von Neumman - Tiene un solo buse de datos diferentes para instrucciones y para memoria 
la arquitentuca Harvard - tiene dos buses de memoria independientes para las instrucciones y para los datos.


4. ¿Cómo es el mapa de memoria de la familia? 

tamaño total de 4G direccionado con 32bits, pero dividido en secciones.

area de datos flash
area de RAM
area bit banding
area de instrucciones
areas directamente a perifericos




5. ¿Qué ventajas presenta el uso de los “shadowed pointers” del PSP y el MSP?


6. Describa los diferentes modos de privilegio y operación del Cortex M, sus relaciones y
como se conmuta de uno al otro. Describa un ejemplo en el que se pasa del modo
privilegiado a no priviligiado y nuevamente a privilegiado.

7. ¿Qué se entiende por modelo de registros ortogonal? Dé un ejemplo
8. ¿Qué ventajas presenta el uso de intrucciones de ejecución condicional (IT)? Dé un
ejemplo
9. Describa brevemente las excepciones más prioritarias (reset, NMI, Hardfault). 
10. Describa las funciones principales de la pila. ¿Cómo resuelve la arquitectura el llamado 
a funciones y su retorno? 
11. Describa la secuencia de reset del microprocesador. 
12. ¿Qué entiende por “core peripherals”? ¿Qué diferencia existe entre estos y el resto de
los periféricos?
13. ¿Cómo se implementan las prioridades de las interrupciones? Dé un ejemplo
14. ¿Qué es el CMSIS? ¿Qué función cumple? ¿Quién lo provee? ¿Qué ventajas aporta?
15. Cuando ocurre una interrupción, asumiendo que está habilitada ¿Cómo opera el
microprocesador para atender a la subrutina correspondiente? Explique con un ejemplo
17.  ¿Cómo cambia la operación de stacking al utilizar la unidad de punto flotante?  
 
16. Explique las características avanzadas de atención a interrupciones: tail chaining y late
arrival. 
17. ¿Qué es el systick? ¿Por qué puede afirmarse que su implementación favorece la
portabilidad de los sistemas operativos embebidos? 
18. ¿Qué funciones cumple la unidad de protección de memoria (MPU)? 
19. ¿Cuántas regiones pueden configurarse como máximo? ¿Qué ocurre en caso de haber
solapamientos de las regiones? ¿Qué ocurre con las zonas de memoria no cubiertas por las
regiones definidas?
20. ¿Para qué se suele utilizar la excepción PendSV? ¿Cómo se relaciona su uso con el resto
de las excepciones? Dé un ejemplo
21. ¿Para qué se suele utilizar la excepción SVC? Expliquelo dentro de un marco de un
sistema operativo embebido. 
ISA 
1. ¿Qué son los sufijos y para qué se los utiliza? Dé un ejemplo
2. ¿Para qué se utiliza el sufijo ‘s’? Dé un ejemplo
3. ¿Qué utilidad tiene la implementación de instrucciones de aritmética saturada? Dé un
ejemplo con operaciones con datos de 8 bits.
4. Describa brevemente la interfaz entre assembler y C ¿Cómo se reciben los argumentos
de las funciones? ¿Cómo se devuelve el resultado? ¿Qué registros deben guardarse en la
pila antes de ser modificados?
5. ¿Qué es una instrucción SIMD? ¿En qué se aplican y que ventajas reporta su uso? Dé un
ejemplo. 